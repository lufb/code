/********************************************************************************************************
Copyright (C), 1988-2007, Qianlong Tech. Co., Ltd.

	FileName:		Option.h
	Author:			tanhg
	Create:			2009.03.16
	
	Description:	RT系统接收机配置模块
	History:		
*********************************************************************************************************/
#ifndef __OPTION_H__
#define __OPTION_H__
//--------------------------------------------------------------------------------------------------------------------------
#include "MEngine.hpp"
#include "../common/commstruct.h"

#define	 MAX_CLASS  64
#define	 MAX_MARKET	64

struct tagNeed
{
	char	szValue[32];
};

//..........................................................................................................................
#ifndef LINUXCODE
//..........................................................................................................................
//Windows操作系统
//..........................................................................................................................
#else
//..........................................................................................................................
//Linux操作系统
//..........................................................................................................................
#endif
//--------------------------------------------------------------------------------------------------------------------------
#pragma pack(1)
//..........................................................................................................................
//..........................................................................................................................
#pragma pack()
//--------------------------------------------------------------------------------------------------------------------------
class Option
{
protected:
	MCriticalSection					m_Section;
	int									m_ServerNum;
	MString								m_ServerIP[8];
	unsigned short						m_ServerPort[8];
	MString								m_MainPath;
	unsigned int						m_usTimeOut;
	unsigned int						m_usHeartIntervalTime;

	//proxy
	char								m_proxy_type;
	MString								m_proxy_ip;
	unsigned short						m_proxy_port;
	MString								m_proxy_user;
	MString								m_proxy_pwd;

	struct tagNeed						m_stNeedArray[512];
	int									m_nNeedCnt;
	int									m_IsCase;
private:
	void			BubbleSort();
public:
	Option(void);
	virtual ~Option();
public:
	int  Instance(void);
	void Release(void);
public:

	MString			GetSrvIP(unsigned short);
	unsigned short	GetPort(unsigned short);
	unsigned short	GetServerCount();
	MString			GetMainPath();
	int				GetProxy(tagGetProxyRes * re);
	unsigned int	GetTimeOut();
	unsigned int	GetHeartIntervalTime();

	BOOL			BinarySearch(const char *);
};
//--------------------------------------------------------------------------------------------------------------------------
//--------------------------------------------------------------------------------------------------------------------------
#endif //__OPTION_H__
//--------------------------------------------------------------------------------------------------------------------------